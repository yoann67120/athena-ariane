# ====================================================================
# üöÄ ARIANE V4 - START NGROK (v1)
# Auteur : Yoann Rousselle
# Description : D√©marrage automatique des tunnels ngrok permanents
# ====================================================================

$ErrorActionPreference = "Stop"
$NgrokPath = "C:\Ariane-Agent\Tools\ngrok.exe"
$ConfigPath = "C:\Ariane-Agent\Tools\ngrok.yml"
$LogFile = "C:\Ariane-Agent\logs\Ngrok.log"

# Cr√©ation du dossier de logs
if (!(Test-Path (Split-Path $LogFile))) {
    New-Item -ItemType Directory -Force -Path (Split-Path $LogFile) | Out-Null
}

function Log($msg) {
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    "$timestamp | $msg" | Tee-Object -FilePath $LogFile -Append
}

try {
    Log "==========================================="
    Log "üöÄ Lancement des tunnels ngrok (Ariane + Usine)"
    Log "==========================================="

    # V√©rification de ngrok
    if (!(Test-Path $NgrokPath)) {
        Log "‚ùå ngrok non trouv√© √† $NgrokPath"
        exit 1
    }

    # D√©marrage des tunnels
    Start-Process -FilePath $NgrokPath -ArgumentList "start --all --config `"$ConfigPath`"" -WindowStyle Hidden
    Start-Sleep -Seconds 5

    Log "‚úÖ Tunnels ngrok lanc√©s via configuration : $ConfigPath"

    # V√©rification en ligne
    $check = curl.exe -s https://ariane.ngrok.io/bridge/sync -H "Content-Type: application/json" -d "{}"
    if ($check -match "received") {
        Log "üü¢ Bridge en ligne sur https://ariane.ngrok.io"
    } else {
        Log "‚ö†Ô∏è Impossible de contacter le Bridge (port 5075)"
    }

    Log "üü¢ Usine en ligne sur https://usine.ngrok.io"
    Log "=== Fin du d√©marrage Ngrok ==="
}
catch {
    Log "‚ùå Erreur : $($_.Exception.Message)"
}
